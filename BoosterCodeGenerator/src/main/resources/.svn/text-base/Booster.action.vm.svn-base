package ${basepackage}.webapp.action;

import java.util.List;

import org.dynadto.BuilderFactory;

import ${basepackage}.model.${Entity};
import ${basepackage}.service.${Entity}Service;
import ${basepackage}.service.dto.I${Entity}DTO;

import com.opensymphony.xwork2.Preparable;

public class ${Entity}Action extends BaseAction implements Preparable {
    /**
     * 
     */
    private static final long serialVersionUID = 6646512588168194210L;

    private ${Entity}Service ${entity}Service;

    private List<I${Entity}DTO> ${entities};

    private I${Entity}DTO ${entity};

    private Long id;
	
	public List<I${Entity}DTO> get${Entities}() {
        return ${entities};
    }

    public void set${Entities}(final List<I${Entity}DTO> ${entities}) {
        this.${entities} = ${entities};
    }

    public I${Entity}DTO get${Entity}() {
        return ${entity};
    }

    public void set${Entity}(final I${Entity}DTO ${entity}) {
        this.${entity} = ${entity};
    }

    public ${Entity}Service get${Entity}Service() {
        return ${entity}Service;
    }

    public Long getId() {
        return id;
    }
	
    /**
     * 
     */
    public ${Entity}Action() {
        BuilderFactory factory = new BuilderFactory();

        ${entity} = factory.getBuilder(I${Entity}DTO.class).build(new ${Entity}());
    }
	
    /**
     * @param ${entity}Service
     *            the ${entity}Service to set
     */
    public void set${Entity}Service(final ${Entity}Service ${entity}Service) {
        this.${entity}Service = ${entity}Service;
    }
	
    /**
     * Grab the entity from the database before populating with request
     * parameters
     */
    public void prepare() {
        if (getRequest().getMethod().equalsIgnoreCase("post")) {
            // prevent failures on new
            String ${entity}Id = getRequest().getParameter("${entity}.id");
            if (${entity}Id != null && !${entity}Id.equals("")) {
                ${entity} = ${entity}Service.retrieve(new Long(${entity}Id));
            }
        }
    }
	
	public String list() {
        ${entities} = ${entity}Service.retrieveAll();
        // ${entities} = new ArrayList<I${Entity}DTO>();
        return SUCCESS;
    }

    public void setId(final Long id) {
        this.id = id;
    }

    public String delete() {
        ${entity}Service.delete(${entity}.getId());
        saveMessage(getText("${entity}.deleted"));

        return SUCCESS;
    }

    public String edit() {
        if (id != null) {
            ${entity} = ${entity}Service.retrieve(id);
        } else {
            BuilderFactory factory = new BuilderFactory();

            ${entity} = factory.getBuilder(I${Entity}DTO.class).build(new ${Entity}());

        }

        return SUCCESS;
    }

    public String save() throws Exception {
        if (cancel != null)
            return "cancel";

        if (delete != null)
            return delete();

        boolean isNew;
        isNew = ${entity}.getId() == null;

        if (isNew) {
            ${entity}Service.add(${entity});
        } else {
            ${entity}Service.update(${entity});
        }

        String key = isNew ? "${entity}.added" : "${entity}.updated";
        saveMessage(getText(key));

        if (!isNew)
            return INPUT;
        else
            return SUCCESS;
    }
}


