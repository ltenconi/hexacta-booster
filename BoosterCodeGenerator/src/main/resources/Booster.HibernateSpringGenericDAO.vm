package ${projectGroupId}.persistence.dao.impl;

import java.io.Serializable;
import java.util.List;

import org.springframework.orm.hibernate3.support.HibernateDaoSupport;

import com.hexacta.persistence.dao.GenericDao;

public abstract class HibernateGenericDAO<T> extends HibernateDaoSupport implements GenericDao<T> {

    protected Class<T> persistentClass = getDomainClass();

    protected abstract Class<T> getDomainClass();

    public void save(final T entity) {
        getHibernateTemplate().save(entity);
    }

    public void delete(final T entity) {
        getHibernateTemplate().delete(entity);
    }

    public void update(final T entity) {
        getHibernateTemplate().update(entity);
    }

    @SuppressWarnings("unchecked")
    public T findById(final Serializable id) {
        return (T) getHibernateTemplate().get(this.persistentClass, id);
    }

    @SuppressWarnings("unchecked")
    public List<T> findAll() {
        return getHibernateTemplate().find("from " + this.persistentClass.getName() + " o");

    }

    public void deleteById(final Serializable id) {
        T obj = this.findById(id);
        getHibernateTemplate().delete(obj);
    }

    @SuppressWarnings("unchecked")
    public int count() {
        List<T> list = getHibernateTemplate().find("select count(*) from " + persistentClass.getName() + " o");
        Long count = (Long) list.get(0);
        return count.intValue();

    }

    @SuppressWarnings("unchecked")
    public List<T> findByExample(final T exampleObject) {
        return getHibernateTemplate().findByExample(exampleObject);

    }

}